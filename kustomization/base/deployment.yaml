---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: auosrs-route
spec:
  parentRefs:
  - name: ingress
    namespace: kube-system
    sectionName: https-auosrs
  - name: ingress
    namespace: kube-system
    sectionName: http-auosrs
  hostnames:
  - "auosrs.com.au"
  rules:
  - backendRefs:
    - name: auosrs
      port: 80
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: auosrs-internal-route
spec:
  parentRefs:
  - name: ingress-internal
    namespace: kube-system
  hostnames:
  - "auosrs.home.arpa"
  rules:
  - backendRefs:
    - name: auosrs
      port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: auosrs
  labels:
    app: auosrs
spec:
  ports:
  - port: 80
    targetPort: 42069
    name: web
    protocol: TCP
  selector:
    app: auosrs
---
# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auosrs
  namespace: app-auosrs
  labels:
    app: auosrs
spec:
  selector:
    matchLabels:
      app: auosrs
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 70%
      maxUnavailable: 70%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: auosrs
      labels:
        app: auosrs
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - auosrs
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: auosrs
        image: app:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 200m
            memory: 600Mi
          limits:
            cpu: 400m
            memory: 600Mi
        livenessProbe:
          tcpSocket:
            port: 42069
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ico/favicon.ico
            port: 42069
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: wiseoldman
              key: token
        ports:
        - containerPort: 42069
          name: auosrs
      restartPolicy: Always
---

